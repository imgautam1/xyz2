#include <iostream>
#include <queue>
void BFS(int G[][7], int start, int n) {
int i = start;
std::queue<int> q;
int visited[7] = {0};
std::cout << i << " ";
visited[i] = 1;
q.push(i);
while(!q.empty()) {
i = q.front();
q.pop();

for(int j = 1; j < n; j++) {
if(G[i][j] == 1 && visited[j] == 0) {
std::cout << j << " ";
visited[j] = 1;
q.push(j);
}
}
}
std::cout << std::endl;
}
int main() {
int G[7][7] = {
{ 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 1, 1, 0, 0, 0 },
{ 0, 1, 0, 0, 1, 0, 0 },
{ 0, 1, 0, 0, 1, 0, 0 },
{ 0, 0, 1, 1, 0, 1, 1 },
{ 0, 0, 0, 0, 1, 0, 0 },
{ 0, 0, 0, 0, 1, 0, 0 }
};
std::cout << "Breadth First Search: ";
BFS(G, 1, 7);
return 0;
}
